<?php
/**
 * @category   Ambab
 * @package    Ambab_Exchange
 * @author     letsdevelophp@gmail.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Ambab\Exchange\Block\Adminhtml\Items\Edit\Tab;

use Magento\Backend\Block\Widget\Form\Generic;
use Magento\Backend\Block\Widget\Tab\TabInterface;

class Main extends Generic implements TabInterface
{
    protected $_wysiwygConfig;
 
    public function __construct(
        \Magento\Backend\Block\Template\Context $context, 
        \Magento\Framework\Registry $registry, 
        \Magento\Framework\Data\FormFactory $formFactory,  
        \Magento\Cms\Model\Wysiwyg\Config $wysiwygConfig, 
        array $data = []
    ) 
    {
        $this->_wysiwygConfig = $wysiwygConfig;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    protected function _prepareLayout()
    {
        $this->getLayout()
            ->getBlock('page.title')
            ->setPageTitle($this->getPageTitle());
    }

    /**
     * @return \Magento\Framework\Phrase
     */
    public function getPageTitle()
    {
        $item = $this->_coreRegistry->registry('current_ambab_exchange_items');
        if ($item->getId()) {
            return __("Edit Request");
        } else {
            return __('New Request');
        }
    }

    /**
     * {@inheritdoc}
     */
    public function getTabLabel()
    {
        return __('Exchange Request');
    }

    /**
     * {@inheritdoc}
     */
    public function getTabTitle()
    {
        return __('Exchange Request');
    }

    /**
     * {@inheritdoc}
     */
    public function canShowTab()
    {
        return true;
    }

    /**
     * {@inheritdoc}
     */
    public function isHidden()
    {
        return false;
    }

    /**
     * Prepare form before rendering HTML
     *
     * @return $this
     * @SuppressWarnings(PHPMD.NPathComplexity)
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
     */
    protected function _prepareForm()
    {
        $model = $this->_coreRegistry->registry('current_ambab_exchange_items');
        /** @var \Magento\Framework\Data\Form $form */
        $form = $this->_formFactory->create();
        $form->setHtmlIdPrefix('item_');
        $fieldset = $form->addFieldset('base_fieldset', ['legend' => __('Exchange Request')]);
        if ($model->getId()) {
            $fieldset->addField('exchange_id', 'hidden', ['name' => 'exchange_id']);
        }
        $fieldset->addField(
            'name',
            'text',
            ['name' => 'name', 'label' => __('Name'), 'title' => __('Name'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'email',
            'text',
            ['name' => 'email', 'label' => __('Email'), 'title' => __('Email'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'mobile',
            'text',
            ['name' => 'mobile', 'label' => __('Mobile'), 'title' => __('Mobile'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'pincode',
            'text',
            ['name' => 'pincode', 'label' => __('Pincode'), 'title' => __('Pincode'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'city',
            'text',
            ['name' => 'city', 'label' => __('City'), 'title' => __('City'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'state',
            'text',
            ['name' => 'state', 'label' => __('State'), 'title' => __('State'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'bedsheetqty',
            'text',
            ['name' => 'bedsheetqty', 'label' => __('Bedsheet Qty'), 'title' => __('Bedsheet Qty'), 'required' => true, 'disabled' => true]
        );
        $fieldset->addField(
            'pickup',
            'text',
            ['name' => 'pickup', 'label' => __('Pickup Timeline'), 'title' => __('Pickup Timeline'), 'required' => true, 'disabled' => true]
        );
        
        $form->setValues($model->getData());
        $this->setForm($form);
        return parent::_prepareForm();
    }
}
